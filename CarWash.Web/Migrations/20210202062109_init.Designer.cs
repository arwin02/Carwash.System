// <auto-generated />
using System;
using CarWash.Web.Infrastructures.Domain.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarWash.Web.Migrations
{
    [DbContext(typeof(DefaultDbContext))]
    [Migration("20210202062109_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CarWash.Web.Infrastructures.Domain.Models.Booking", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BookingAddress");

                    b.Property<Guid?>("CostumerId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid?>("ServiceId");

                    b.Property<int>("ServiceType");

                    b.Property<string>("Time");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("Vehicle");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("CarWash.Web.Infrastructures.Domain.Models.Contact", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("Message");

                    b.Property<string>("Name");

                    b.Property<string>("Subject");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("Id");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("CarWash.Web.Infrastructures.Domain.Models.Group", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<int>("Status");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("CarWash.Web.Infrastructures.Domain.Models.Service", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Description")
                        .HasMaxLength(520);

                    b.Property<decimal>("Price");

                    b.Property<int>("ServiceType")
                        .HasMaxLength(255);

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("Vehicle");

                    b.HasKey("Id");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("CarWash.Web.Infrastructures.Domain.Models.User", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FirstName");

                    b.Property<int>("Gender");

                    b.Property<string>("LastName");

                    b.Property<int>("LoginRetries");

                    b.Property<int>("LoginStatus");

                    b.Property<string>("Password");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("RegistrationCode");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("CarWash.Web.Infrastructures.Domain.Models.UserGroup", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid?>("GroupId");

                    b.Property<bool>("IsAdmin");

                    b.Property<bool>("UpdateLocation");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("UserAlias");

                    b.Property<Guid?>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserGroup");
                });

            modelBuilder.Entity("CarWash.Web.Infrastructures.Domain.Models.UserRole", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("Role");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("CarWash.Web.Infrastructures.Domain.Models.Booking", b =>
                {
                    b.HasOne("CarWash.Web.Infrastructures.Domain.Models.Service", "Services")
                        .WithMany()
                        .HasForeignKey("ServiceId");
                });
#pragma warning restore 612, 618
        }
    }
}
